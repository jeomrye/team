<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.std.mapper.PlaceMapper">
 
<!--  검색 기준 -->
   <sql id="criteria">
  <trim prefix="(" suffix=") AND " prefixOverrides="OR">
    	<foreach item="type" collection="typeArr">
    		<trim prefix="OR">
    			<choose>
    				<when test="type == 'T'.toString()">
    					title like '%'||#{keyword}||'%'
    				</when>
    				<when test="type == 'C'.toString()">
    					content like '%'||#{keyword}||'%'
    				</when>
    				<when test="type == 'R'.toString()">
    					address like '%'||#{keyword}||'%'
    				</when>
    			</choose>
    		</trim>
    	</foreach>
    </trim>	
  </sql>
  
   <select id="getListWithPaging" resultType="com.std.domain.PlaceVO">
    <![CDATA[
    select 
    	score, bno, title, offer, extra, content, time, clean, tel, address,
    	 page, writer, regdate, updatedate, userid, placerecnt
    from
    	(
    	select /*+INDEX_DESC(place pk_place) */
    		rownum rn, score, bno, title, offer, extra, content, time, clean, tel, address,
    	 page, writer, regdate, updatedate, userid, placerecnt
    	from
    		place
    	where 
    ]]>    	
    	
    <include refid="criteria"></include>
    <!-- rownum <= 페이지번호 *1페이당 글의 개수 -->
    <!-- rn > (페이지번호-1) *1페이당 글의 개수 -->
    <!-- ex 11~20 -->
    <![CDATA[	
    	rownum<= #{pageNum} * #{amount} 
    	)
    where rn > (#{pageNum}-1) * #{amount}
    ]]>
  </select>
  
    <insert id="insert">
  		<selectKey keyProperty="bno" order="BEFORE" resultType="long">
  		select seq_place.nextval from dual
  		</selectKey>
  		insert into place (bno, title, offer, extra, content, time, clean, tel, address, page, writer)
  		values (#{bno}, #{title}, #{offer, jdbcType=VARCHAR}, #{extra, jdbcType=VARCHAR}, #{content}, 
  		#{time}, #{clean}, #{tel}, #{address}, #{page, jdbcType=VARCHAR}, #{writer})
  </insert>
  
  <select id="read" resultType="com.std.domain.PlaceVO">
  		select * from place where bno = #{bno}
  </select>
  
  <delete id="delete">
  		delete from place where bno = #{bno}
  </delete>
  
  <update id="update">
  		update place set title=#{title}, offer=#{offer}, extra=#{extra}, content=#{content},
  		 time=#{time}, clean=#{clean}, tel=#{tel}, address=#{address}, page=#{page}, writer=#{writer},
  		updateDate = sysdate where bno = #{bno}
  </update>
  
  <select id="getTotalCount" resultType="int">
  	select count(*) from place 
  	where  	
  	<include refid="criteria"></include> 	
  	bno>0
  </select>
  
  <update id="updateReplyCnt">
  	update place set placerecnt = placerecnt + #{amount} where bno = #{bno}
  </update>
  
  <select id="getReplyCnt" resultType="long">
  	select placeReCnt from place where bno = #{bno}
  </select>
 </mapper>
